  version: 0.2

  # env:
  #   variables:
  #     DB_HOST: $DB_HOST
  #     SOCIAL_SECRET: $SOCIAL_SECRET
  #     DB_USERNAME: $DB_USERNAME
  #     EMAIL_HOST_PASSWORD: $EMAIL_HOST_PASSWORD
  #     GOOGLE_CLIENT_ID: $GOOGLE_CLIENT_ID
  #     DB_PASSWORD: $DB_PASSWORD
  #     AWS_STORAGE_BUCKET_NAME: $AWS_STORAGE_BUCKET_NAME
  #     AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
  #     DB_NAME: $DB_NAME
  #     SECRET_KEY: $SECRET_KEY
  #     EMAIL_HOST_USER: $EMAIL_HOST_USER
  #     AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY

  phases:
    pre_build:
      commands:
        - echo Logging in to Amazon ECR...
        - aws --version
        - printenv
        - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
    build:
      commands:
        - echo Build started on `date`
        - echo Building the Docker image...
        - docker build -t flask-ecs .
        - docker tag flask-ecs:latest $AWS_ACCOUNT_ID.dkr.ecr.us-east-2.amazonaws.com/flask-ecs:latest
    post_build:
      commands:
        - echo Build completed on `date`
        - echo Pushing the Docker images...
        - echo $REPOSITORY_URI
        - docker push $AWS_ACCOUNT_ID.dkr.ecr.us-east-2.amazonaws.com/flask-ecs:latest
        # - printf '[{"name":"car_shop","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.us-east-2.amazonaws.com/car_shop:latest > imageDetail.json
        - printf '{"ImageURI":"%s"}' $AWS_ACCOUNT_ID.dkr.ecr.us-east-2.amazonaws.com/flask-ecs:latest > imageDetail.json
  # artifacts:
  #     files: 
  #     - imagedefinitions.json

  artifacts:
    files: 
      - 'image*.json'
      - 'appspec.yaml'
      - 'taskdef.json'
    secondary-artifacts:
      DefinitionArtifact:
        files:
          - appspec.yaml
          - taskdef.json
      ImageArtifact:
        files:
          - imageDetail.json